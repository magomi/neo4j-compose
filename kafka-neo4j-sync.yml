# sets a basic KAFKA infrastructure with broker, schema registry and connector and control center
# based on https://github.com/neo4j-contrib/neo4j-streams/blob/master/kafka-connect-neo4j/docker/docker-compose.yml
# control center can be reached via http://localhost:9021/
# 2 neo4j instances are configured: Neo4j3.5 and Neo4j 4.0
# URLS:
# * Neo4j 3.5
#   + browser: localhost:17474
#   + bolt: localhost:17687
# * Neo4j 4
#   + browser: localhost:27474
#   + bolt: localhost:27687

# load the streams plugin into Neo4j 3.5: (needed for cdc)
# mkdir -p $HOME/tmp/docker/kafka-neo4j-sync/neo4j35/plugins
# curl -L  https://github.com/neo4j-contrib/neo4j-streams/releases/download/3.5.6/neo4j-streams-3.5.6.jar --output $HOME/tmp/docker/kafka-neo4j-sync/neo4j35/plugins/neo4j-streams-3.5.6.jar --silent

# Once the services are loaded and running, activate the Connect plugin:
#
# sourceId strategy:
# curl -X POST http://localhost:8083/connectors \
#  -H 'Content-Type:application/json' \
#  -H 'Accept:application/json' \
#  -d @configs/neo4j-sync-sourceId.json

# schema strategy:
# curl -X POST http://localhost:8083/connectors \
#  -H 'Content-Type:application/json' \
#  -H 'Accept:application/json' \
#  -d @configs/neo4j-sync-schema.json

# mapped volumes are created under $HOME/tmp/docker/kafka-neo4j-sync/

version: '3'

networks:
  lan:

services:

  neo4j35:
    image: neo4j:3.5-enterprise
    networks:
      - lan
    hostname: neo4j35
    container_name: neo4j35
    ports:
      - "17474:17474"
      - "17687:17687"
    depends_on:
      - broker
      - connect
    volumes:
      - $HOME/tmp/docker/kafka-neo4j-sync/neo4j35/conf:/conf
      - $HOME/tmp/docker/kafka-neo4j-sync/neo4j35/data:/data
      - $HOME/tmp/docker/kafka-neo4j-sync/neo4j35/logs:/logs
      - $HOME/tmp/docker/kafka-neo4j-sync/neo4j35/metrics:/metrics
      - $HOME/tmp/docker/kafka-neo4j-sync/neo4j35/plugins:/plugins
    environment:
      - NEO4J_AUTH=neo4j/changeme
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - NEO4J_dbms_connector_http_listen__address=:17474
      - NEO4J_dbms_connector_https_listen__address=:17473
      - NEO4J_dbms_connector_bolt_listen__address=:17687
      - NEO4J_kafka_zookeeper_connect=zookeeper:2181
      - NEO4J_kafka_bootstrap_servers=broker:9093
      - NEO4J_streams_sink_enabled=false
      - NEO4J_streams_source_enabled=true
      - NEO4J_streams_source_schema_polling_interval=10000
      - NEO4JLABS_PLUGINS=["apoc"]
      - NEO4J_dbms_allow__upgrade=true

  neo4j42:
    hostname: neo4j42
    image: neo4j:4.2-enterprise
    container_name: neo4j42
    networks:
      - lan
    ports:
      - "27687:27687"
      - "27474:27474"
    depends_on:
      - broker
      - connect
      - neo4j35
    volumes:
      - $HOME/tmp/docker/kafka-neo4j-sync/neo4j42/conf:/conf
      - $HOME/tmp/docker/kafka-neo4j-sync/neo4j42/data:/data
      - $HOME/tmp/docker/kafka-neo4j-sync/neo4j42/logs:/logs
      - $HOME/tmp/docker/kafka-neo4j-sync/neo4j42/metrics:/metrics
      - $HOME/tmp/docker/kafka-neo4j-sync/neo4j42/plugins:/plugins
    environment:
      - NEO4J_AUTH=neo4j/changeme
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - NEO4J_dbms_connector_http_listen__address=:27474
      - NEO4J_dbms_connector_https_listen__address=:27473
      - NEO4J_dbms_connector_bolt_listen__address=:27687
      - NEO4J_dbms_default__database=db1
      - NEO4JLABS_PLUGINS=["apoc"]
      - NEO4J_dbms_logs_query_enabled=INFO
      - NEO4J_dbms_logs_query_parameter__logging__enabled=true
      - NEO4J_dbms_allow__upgrade=true

  zookeeper:
    image: confluentinc/cp-zookeeper
    networks:
      - lan
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: 'WARN'
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-enterprise-kafka
    hostname: broker
    networks:
      - lan
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    expose:
      - "9093"
    volumes:
      - $HOME/tmp/docker/kafka-neo4j-sync/broker/data:/data
      - $HOME/tmp/docker/kafka-neo4j-sync/broker/logs:/logs
    environment:
      KAFKA_LOG4J_ROOT_LOGLEVEL: 'WARN'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      KAFKA_LOG_DIRS: '/data'

  schema_registry:
    image: confluentinc/cp-schema-registry
    networks:
      - lan
    hostname: schema_registry
    container_name: schema_registry
    depends_on:
      - zookeeper
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_LOG4J_ROOT_LOGLEVEL: 'WARN'
      SCHEMA_REGISTRY_HOST_NAME: schema_registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'

  connect:
    image: confluentinc/cp-kafka-connect
    networks:
      - lan
    hostname: connect
    container_name: connect
    depends_on:
      - zookeeper
      - broker
      - schema_registry
    ports:
      - "8083:8083"
    volumes:
      - $HOME/tmp/docker/kafka-neo4j-sync/connect/plugins:/tmp/connect-plugins
    environment:
      CONNECT_LOG4J_ROOT_LOGLEVEL: 'WARN'
      CONNECT_BOOTSTRAP_SERVERS: 'broker:9093'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema_registry:8081'
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema_registry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONNECT_PLUGIN_PATH: /usr/share/java,/tmp/connect-plugins,/usr/share/confluent-hub-components
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=WARN,org.I0Itec.zkclient=WARN,org.reflections=ERROR
    command:
      - bash
      - -c
      - |
        confluent-hub install --no-prompt neo4j/kafka-connect-neo4j:1.0.7
        confluent-hub install --no-prompt jcustenborder/kafka-connect-twitter:0.3.33
        /etc/confluent/docker/run

  control-center:
    image: confluentinc/cp-enterprise-control-center
    networks:
      - lan
    hostname: control-center
    container_name: control-center
    depends_on:
      - zookeeper
      - broker
      - schema_registry
      - connect
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_LOG4J_ROOT_LOGLEVEL: 'WARN'
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:9093'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONTROL_CENTER_CONNECT_CLUSTER: 'connect:8083'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
